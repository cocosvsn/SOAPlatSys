<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping package="com.cbs.cbsmgr.bean">
   <!--  <sql-query name="select_rolemenu">
	    
	    <![CDATA[SELECT DISTINCT(MENUID),MENUNAME,MENULABEL,MENUCODE,ISLEAF,MENUACTION,PARAMETER,UIENTRY,MENULEVEL,ROOTID,PARENTSID,DISPLAYORDER,IMAGEPATH,EXPANDPATH,MENUSEQ,OPENMODE,SUBCOUNT,M.FUNCID
	        FROM TSOASYSMENU M,TSOASYSROLEOPERREL R,TSOASYSROLEFUNREL F WHERE M.FUNCID=F.FUNCID AND R.ROLEID=F.ROLEID AND R.OPERATORID=? ORDER BY PARENTSID,DISPLAYORDER
	    	]]>
	</sql-query>
	-->
	
	<!-- get list of Debit Not In Invoice FinancialTransactions -->
	<query name="select_debitnotininvoicefts">
		<![CDATA[
		select distinct(ft) 
		from FinancialTransaction ft,SmsAccount sa 
		where ft.accountId =:accountId 
		and ft.smsAccountId = sa.smsAccountId 
		and sa.debitCredit = 'D' 
		and ft.invoiceId = 0 
		and (ft.ftStatusId = 1 or ft.ftStatusId = 3) 
		order by ft.ftId
		]]>
	</query>
	
	<!-- get list of Credit Not In Invoice FinancialTransactions -->
	<query name="select_creditnotininvoicefts">
		<![CDATA[
		select distinct(ft) 
		from FinancialTransaction ft,SmsAccount sa 
		where ft.accountId =:accountId 
		and ft.smsAccountId = sa.smsAccountId 
		and sa.debitCredit = 'C' 
		and ft.invoiceId = 0 
		and (ft.ftStatusId = 1 or ft.ftStatusId = 3) 
		order by ft.ftId
		]]>
	</query>
    
    <!-- get list all of Not In Invoice FinancialTransactions -->
	<query name="select_allnotininvoicefts">
		<![CDATA[
		select distinct(ft) 
		from FinancialTransaction ft 
		where ft.accountId =:accountId 
		and ft.invoiceId = 0 
		and (ft.ftStatusId = 1 or ft.ftStatusId = 3) 
		order by ft.ftId
		]]>
	</query>
	
	<!-- get product queried by accountId and productCategoryId -->
	<query name="select_productbyaccountidandproductcategoryid">
		<![CDATA[
		select distinct(pt) 
		from Product pt 
		where pt.accountId =:accountId 
		and pt.productCategoryId = :productCategoryId
		]]>
	</query>
	
	<!-- get vodproduct by programid  -->
	<query name="select_vodproductbyprogramid">
		<![CDATA[
		select distinct(vpt) 
		from VodProduct vpt, VodProgramPackageRel vppr 
		where vpt.vodPackageId = vppr.vodPackageId 
		and vppr.programid = :programid
		]]>
	</query>
	
	<!-- get vodHistoryTemps by customerId and vodProductId  
	<query name="select_vodHistoryTempsbycustomerIdandvodProductId">
		<![CDATA[
		select distinct(vht) 
		from VodHistoryTemp vht 
		where vht.customerId = :customerId 
		and vht.vodProductId = :vodProductId 
		]]>
	</query>-->
	
	<!-- get valid vodCampaignCategories  -->
	<query name="select_vodCampaignCategories">
		<![CDATA[
		select distinct(vcc) 
		from VodCampaignCategory vcc 
		where vcc.activeTag = 'Y' 
		order by vodCampaignCategoryId
		]]>
	</query>
	
	<!-- get normal status products by customerId  -->
	<query name="select_normalStatusProductsByCustomerId">
		<![CDATA[
		select distinct(pt) 
		from Product pt 
		where pt.customerId = :customerId 
		and pt.productStatusId = 1 
		order by pt.productId 
		]]>
	</query>
	
	<!-- get vodHistories by customerId and date 
	<query name="select_vodHistoriesByCustomerIdAndDate">
		<![CDATA[
		select distinct(vh) 
		from VodHistory vh 
		where vh.customerId = :customerId 
		and vh.createDate >= :dateFrom 
		and vh.createDate >= :dateTo 
		order by vh.vodHistoryId 
		]]>
	</query>-->
	
	<!-- get ProductCategories by description -->
	<query name="select_productCategoriesByDescription">
		<![CDATA[
		select pc.productCategoryId,pc.description,pc.productTypeId,pc.priceId,p.description,
		p.price,pc.introduction,pc.billingTypeId,pc.contentCategoryId,pc.days,pc.counts,
		pc.seconds,pc.validFrom,pc.validTo,pc.createUser,pc.createDate,
		sa.smsAccountId,sa.description,
		pt.description,pt.hardwareTag,cc.description,bt.description,pc.code 
		from ProductCategory pc,Price p,SmsAccount sa,ProductType pt,ContentCategory cc,BillingType bt 
		where pc.description like :description 
		and pc.priceId = p.priceId 
		and p.smsAccountId = sa.smsAccountId 
		and pc.productTypeId = pt.productTypeId 
		and pc.contentCategoryId = cc.contentCategoryId 
		and pc.billingTypeId = bt.billingTypeId 
		]]>
	</query>
	
	<!-- get all ProductCategories , 20091026 -->
	<query name="select_allProductCategories">
		<![CDATA[
		select pc.productCategoryId,pc.description,pc.productTypeId,pc.priceId,p.description,
		p.price,pc.introduction,pc.billingTypeId,pc.contentCategoryId,pc.days,pc.counts,
		pc.seconds,pc.validFrom,pc.validTo,pc.createUser,pc.createDate,
		sa.smsAccountId,sa.description,
		pt.description,pt.hardwareTag,cc.description,bt.description,pc.code 
		from ProductCategory pc,Price p,SmsAccount sa,ProductType pt,ContentCategory cc,BillingType bt 
		where pc.priceId = p.priceId 
		and p.smsAccountId = sa.smsAccountId 
		and pc.productTypeId = pt.productTypeId 
		and pc.contentCategoryId = cc.contentCategoryId 
		and pc.billingTypeId = bt.billingTypeId 
		]]>
	</query>
	
	<!-- get vodProducts by productCategoryId -->
	<query name="select_productsByProductCategoryId">
		<![CDATA[
		select vpt.vodProductId,vpt.type,vpt.billingType,vpt.price,vpt.validFrom,vpt.validTo,
		vpt.sendTag,vpt.packagePrice,vpg.vodPackageId,vpg.ptglobalid,vpg.description,
		vpg.subtitlelanguage,vpg.audiolanguage,vpg.director,vpg.productname,
		vpg.actors,vpg.shootdate,vpg.issuedate,vpg.countrydist,vpg.inputmanid,
		vpg.inputtime,vpg.remark,vdc.vodDisplayCategoryId,vdc.title 
		from VodCbsProductRel vcp, VodProduct vpt, VodPackage vpg, VodDisplayCategory vdc 
		where vcp.productCategoryId = :productCategoryId 
		and vcp.vodProductId = vpt.vodProductId 
		and vpt.vodPackageId = vpg.vodPackageId 
		and vpg.vodDisplayCategoryId = vdc.vodDisplayCategoryId 
		]]>
	</query>
	
	<!-- get packages by Description -->
	<query name="select_packagesByDescription">
		<![CDATA[
		select distinct(p) 
		from ProductPackage p 
		where p.description like :description 
		order by p.packageId
		]]>
	</query>

	<!-- get packageItems by packageId -->
	<query name="select_packageItemsByPackageId">
		<![CDATA[
		select pi.packageItemId,pi.sequence,pc.productCategoryId,pc.description,
		pi.nextOption,pi.nextProductCategoryId,
		p.priceId,p.description,p.price 
		from PackageItem pi, ProductCategory pc, Price p 
		where pi.packageId = :packageId 
		and pi.productCategoryId = pc.productCategoryId 
		and pc.priceId = p.priceId 
		order by pi.packageItemId 
		]]>
	</query>
	
	<!-- get vodCbsProductRel by vodProductId,productCategoryId -->
	<query name="select_vodCbsProductRelByVodProductIdAndProductCategoryId">
		<![CDATA[
		select distinct(vcpr) 
		from VodCbsProductRel vcpr 
		where vcpr.vodProductId = :vodProductId 
		and vcpr.productCategoryId = :productCategoryId 
		order by vcpr.relId 
		]]>
	</query>
	
	<!-- get all hardware products by customerId -->
	<query name="select_hardwareProductsByCustomerId">
		<![CDATA[
		select distinct(pt.productId),pt.accountId,pt.hardwareId,pt.productStatusId,pt.oldStatusId,
		pt.statusChangeDate,pt.captureDate,hr.hardwareModelId,hr.serialNo,
		hr.cardNo,hr.otherNo,hr.hardwareStatusId,hr.guaranteeDate,
		hm.hardwareModelName,hm.hardwareType,hr.mac,hr.ip,hr.userName,hr.password 
		from Product pt, Hardware hr, HardwareModel hm 
		where pt.customerId = :customerId 
		and pt.hardwareId = hr.hardwareId 
		and hr.hardwareModelId = hm.hardwareModelId 
		order by pt.productId 
		]]>
	</query>
	
	<!-- get hardwares by hardwareModelId and serialNo -->
	<query name="select_hardwaresByHardwareModelIdAndSerialNo">
		<![CDATA[
		select distinct(hr) 
		from Hardware hr 
		where hr.hardwareModelId = :hardwareModelId 
		and hr.serialNo = :serialNo
		]]>
	</query>
	
	<!-- get hardwares by hardwareModelId and cardNo -->
	<query name="select_hardwaresByHardwareModelIdAndCardNo">
		<![CDATA[
		select distinct(hr) 
		from Hardware hr 
		where hr.hardwareModelId = :hardwareModelId 
		and hr.cardNo = :cardNo
		]]>
	</query>
	
	<!-- get hardwares by hardwareModelId and otherNo -->
	<query name="select_hardwaresByHardwareModelIdAndOtherNo">
		<![CDATA[
		select distinct(hr) 
		from Hardware hr 
		where hr.hardwareModelId = :hardwareModelId 
		and hr.otherNo = :otherNo
		]]>
	</query>
	
	<!-- get hardwareModels by hardwareModelName -->
	<query name="select_hardwareModelsByHardwareModelName">
		<![CDATA[
		select distinct(hm) 
		from HardwareModel hm 
		where hm.hardwareModelName like :hardwareModelName
		]]>
	</query>
	
	<!-- get all prices -->
	<query name="select_allPrices">
		<![CDATA[
		select p.priceId,p.description,p.price,p.smsAccountId,sa.description 
		from Price p, SmsAccount sa 
		where p.smsAccountId = sa.smsAccountId 
		order by p.priceId
		]]>
	</query>
	
	<!-- get customer by customerId -->
	<query name="select_customerByCustomerId">
		<![CDATA[
		select c.customerTypeId,c.customerStatusId,c.captureDate,c.defaultAddressId,
		c.districtId,sd.district 
		from Customer c,SmsDistrict sd 
		where c.districtId = sd.districtId 
		and c.customerId = :customerId
		]]>
	</query>
	
	
	<!-- get list of product where product in send -->
	<query name="select_productbysendid">
		<![CDATA[select distinct(vp) from VodSendDetail vsd,VodProduct vp where vsd.vodProductId =vp.vodProductId and vsd.vodSendId = :vodsendid]]>
	</query>
	
	<query name="select_programbyvodpackageid">
		<![CDATA[select distinct(pi) from com.soaplat.cmsmgr.bean.ProgramInfo pi,VodProgramPackageRel vpp where pi.programid =vpp.programid and vpp.vodPackageId = :vodPackageId]]>
	</query>
	<query name="delete_programpackagerelbypackageid">
		<![CDATA[delete com.cbs.cbsmgr.bean.VodProgramPackageRel vppr where vppr.vodPackageId = :vodPackageId]]>
	</query>
	<query name="select_vodsendandvodsenddetail">
		<![CDATA[select vs.vodSendId,vs.dealState,vs.validFrom,vs.validTo,vsd.vodSendDetailId,vsd.vodProductId from com.cbs.cbsmgr.bean.VodSend vs,VodSendDetail vsd where vs.vodSendId = vsd.vodSendId and vs.dealState = :dealState]]>
	</query>
	<query name="delete_senddetailbysendid">
		<![CDATA[delete com.cbs.cbsmgr.bean.VodSendDetail vsd where vsd.vodSendId = :vodSendId]]>
	</query>
	<query name="update_VodSendByVodSendId">
		<![CDATA[update com.cbs.cbsmgr.bean.VodSend vs set dealState = 10 where vs.vodSendId = :vodSendId]]>
	</query>
	
	
	
	<!-- 查询所有需要分析的点播流水  Edited by Andy 20091223 -->
	<query name="select_NotDealedVodFlows">
		<![CDATA[
		select vf 
		from VodFlow vf 
		where vf.dealState = 0 
		and vf.serviceType = 1 
		order by vf.customerId,vf.progfileId,vf.stopTime
		]]>
	</query>
	
	<!-- 根据文件ID查询产品  Edited by Andy 20091223 13:42-->
	<query name="select_ProductCategoriesByProgfileid">
		<![CDATA[
		select distinct(pc) 
		from ProductCategory pc, com.soaplat.cmsmgr.bean.PackageFiles pf, PpSrvPdtRel psdr 
		where pf.progfileid = :progfileid 
		and pf.productid = psdr.productid 
		and psdr.productCategoryId = pc.productCategoryId
		]]>
	</query>
	
	<!-- 根据客户ID查询所有状态正常的产品 Edited by Andy 20091223 -->
	<query name="select_normalProductsByCustomerId">
		<![CDATA[
		select pt, pc 
		from Product pt, ProductCategory pc 
		where pt.customerId = :customerId 
		and pt.productStatusId = 1 
		and pt.productCategoryId = pc.productCategoryId 
		order by pt.packagePriority, pt.billingPriority 
		]]>
	</query>
	
	<!-- 查询优惠 Edited by Andy 20091223 -->
	<query name="select_CampaignCategories">
		<![CDATA[
		select cc 
		from CampaignCategory cc 
		where cc.productCategoryId = :productCategoryId 
		and cc.serviceType = :serviceType 
		and (cc.customerTypeCollection like :customerTypeCollection or cc.customerTypeCollection like '(*)') 
		and (cc.customerStatusCollection like :customerStatusCollection or cc.customerStatusCollection like '(*)') 
		and (cc.districtCollection like :districtCollection or cc.districtCollection like '(*)') 
		and (cc.accountTypeCollection like :accountTypeCollection or cc.accountTypeCollection like '(*)') 
		and (cc.accountStatusCollection like :accountStatusCollection or cc.accountStatusCollection like '(*)') 
		and (cc.mopCollection like :mopCollection) 
		and cc.validFrom <= :validFrom 
		and cc.validTo >= :validTo 
		and cc.activeTag = 'Y' 
		order by cc.priority 
		]]>
	</query>
	
	<!-- 查询点播历史 Edited by Andy 20091223 -->
	<query name="select_NotDealedVodHistoryTemps">
		<![CDATA[
		select vht 
		from VodHistoryTemp vht 
		where vht.dealState = 0 
		and vht.ftId <= 0 
		order by vht.customerId,vht.accountId,vht.startTime 
		]]>
	</query>
	
	<!-- 查询到期的正常状态的周期性计费的产品 Edited by Andy 20091223 15:45 -->
	<query name="select_ProductsForGeneratingPeriodFee">
		<![CDATA[
		select distinct(pt),pc,p,at 
		from Product pt, ProductCategory pc, Price p, Account at 
		where pt.productStatusId = 1 
		and pt.productCategoryId = pc.productCategoryId 
		and pc.billingTypeId = :billingTypeId 
		and pt.billingValidDate >= :dateb 
		and pt.billingValidDate <= :datee 
		and pc.priceId = p.priceId 
		and pt.accountId = at.accountId 
		order by pt.customerId, pt.captureDate 
		]]>
	</query>
	
	<!-- 查询未入账单的财务交易 Edited by Andy 20091223 17:10 -->
	<query name="select_NotInInvoiceFts">
		<![CDATA[
		select ft 
		from FinancialTransaction ft 
		where ft.ftStatusId = 1 
		and ft.invoiceId = 0 
		order by ft.customerId, ft.accountId, ft.createDate 
		]]>
	</query>
	
	<!-- 根据username，查询Hardware、Product，得到Product  Edited by Andy 20091224 14:53 -->
	<query name="select_ProductsByUsername">
		<![CDATA[
		select pt 
		from Hardware hd, Product pt 
		where hd.hardwareId = pt.hardwareId 
		and hd.userName = :userName
		]]>
	</query>
	
	<!-- Edited by Andy 20100322 21:02 -->
	<!-- 财务报表 -->
	<query name="reportFTsWithCustomerid">
		<![CDATA[
		select ft,ad 
		from FinancialTransaction ft, Address ad 
		where ft.customerId = :customerId 
		and ft.createDate >= :dateFrom 
		and ft.createDate <= :dateTo 
		and ft.customerId = ad.customerId 
		order by ft.ftId 
		]]>
	</query>
	
	<!-- Edited by Andy 20100322 21:02 -->
	<!-- 财务报表 -->
	<query name="reportFTsWithoutCustomerid">
		<![CDATA[
		select ft,ad 
		from FinancialTransaction ft, Address ad 
		where ft.createDate >= :dateFrom 
		and ft.createDate <= :dateTo 
		and ft.customerId = ad.customerId 
		order by ft.customerId,ft.ftId 
		]]>
	</query>
	
	<!-- Edited by Andy 20100322 21:30 -->
	<!-- 点播历史报表 -->
	<query name="reportVodHistoriesWithCustomerid">
		<![CDATA[
		select vh,ad,pc 
		from VodHistory vh, Address ad, ProductCategory pc 
		where vh.customerId = :customerId 
		and vh.startTime >= :dateFrom 
		and vh.startTime <= :dateTo 
		and vh.customerId = ad.customerId 
		and vh.productCategoryId = pc.productCategoryId 
		order by vh.ftId 
		]]>
	</query>
	
	<!-- Edited by Andy 20100322 21:30 -->
	<!-- 点播历史报表 -->
	<query name="reportVodHistoriesWithoutCustomerid">
		<![CDATA[
		select vh,ad,pc 
		from VodHistory vh, Address ad, ProductCategory pc 
		where vh.startTime >= :dateFrom 
		and vh.startTime <= :dateTo 
		and vh.customerId = ad.customerId 
		and vh.productCategoryId = pc.productCategoryId 
		order by vh.ftId 
		]]>
	</query>
	
</hibernate-mapping>

<!-- <query name="select_currentmax">
		<![CDATA[select max(:propertyname) as maxvalue  from :entityname]]>
    </query> -->
    
